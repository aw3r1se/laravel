version: '3'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: digitalocean.com/php
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
            PHP_IDE_CONFIG: "serverName=Docker"
        working_dir: /var/www
        ports:
            - "21:21"
            - "20:20"
            - "3000:3000"
            - "30000-30009:30000-30009"
        volumes:
            - ./:/var/www
            - ./deploy/php.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network
        entrypoint: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

    #MySQL Service
    db:
        image: library/mariadb:10.7
        container_name: db
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_ROOT_PASSWORD: laravel
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql/
        networks:
            - app-network

    #PhpMyAdmin Service
    phpmyadmin:
        image: phpmyadmin:5
        ports:
            - '${FORWARD_PHPMYADMIN_PORT:-8888}:80'
        environment:
            PMA_HOST: db
            PMA_USER: root
            PMA_PASSWORD: laravel
            PMA_ABSOLUTE_URI: 'http://localhost:${FORWARD_PHPMYADMIN_PORT:-8888}/'
        volumes:
            - phpmyadmin:/sessions
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local
    phpmyadmin:
        driver: local
